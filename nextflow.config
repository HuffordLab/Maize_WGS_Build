
/****************************
 Default parameter values
 nextflow run script.nf --genome "./test-data/ref/*.fasta"
 ****************************/

params {
  help = false

  // Output directory
  outdir = './GATK_Results'

  // Reference genome to map against when looking for SNPs
  genome = false

  // Either input reads as a glob pattern or as a tab delimited file
  reads = false
  reads_file = false

  // invariant
  invariant = false     // Keep invariant sites in vcf

  // link executables (optional)
  singularity_img = 'shub://aseetharam/gatk:latest'
  docker_img = 'j23414/gatk4'
  gatk_app = 'gatk'
  bwamem2_app = 'bwa-mem2'
  samtools_app = 'samtools'
  bedtools_app = 'bedtools'
  datamash_app = 'datamash'
  vcftools_app = 'vcftools'

  // other runtime options
  java_options = false   // example "-Xmx60g -XX:+UseParallelGC"
  window = 100000
  queueSize = 20
  account = false        // HPC account name
  threads = false
}

env {
  // == link executables
  bwamem2_app = "$params.bwamem2_app"
  samtools_app = "$params.samtools_app"
  bedtools_app = "$params.bedtools_app"
  gatk_app = "$params.gatk_app"
  datamash_app = "$params.datamash_app"
  vcftools_app = "$params.vcftools_app"

  // == slurm or other options
  account_flag = params.account ? " --account $params.account " : ' '
  java_options = params.java_options ? "$params.java_options" : "-Xmx80g -XX:+UseParallelGC -Djava.io.tmpdir=\$TMPDIR"
  threads = params.threads ? $params.threads : 4
}

/****************************
 Default process settings
 ****************************/
process {
  publishDir = "$params.outdir"
}

/****************************
 Settings for different computiong hardware
 ****************************/

executor {
  queueSize = "$params.queueSize"
  submitRateLimit = '10 sec'
}

profiles {
  local {
    cpus = 4
  }

  slurm {
    includeConfig 'configs/slurm.config'
  }

  condo {
    includeConfig 'configs/slurm.config'
  }

  atlas {
    includeConfig 'configs/slurm.config'
  }

  ceres {
    includeConfig 'configs/slurm.config'
  }

  docker {
    process.container = params.docker_img
    docker.enabled = true
  }

  singularity {
    process.container = params.singularity_img
    singularity.enabled = true
  }

  // miniconda { process.conda = 'environment.yml' }
  // awsbatch, conda, test can be added later
}

singularity.autoMounts = true
docker.runOptions = '-u \$(id -u):\$(id -g)'

/*****************************
 Generate html runtime reports
  -with-timeline timeline.html
  -with-report report.html
 *****************************/
timeline {
  enabled = true
  file = "$params.outdir/timeline.html"
}

report {
  enabled = true
  file = "$params.outdir/report.html"
}

/**********************************
 Author and software info here
 **********************************/
manifest {
  name = 'isugifNF/GATK'
  description = 'GATK pipeline'
  mainScript = 'main.nf'
  version = '1.0.0'
}
